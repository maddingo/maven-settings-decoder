# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Build and deploy

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read
  packages: write

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Java and Maven
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: 'github'
        settings-path: ${{ github.workspace }}
        cache: 'maven'
    - name: Setup GraalVM
      uses: graalvm/setup-graalvm@v1
      with:
        version: 'latest'
        java-version: '17'
        components: 'native-image'
        github-token: ${{ secrets.GITHUB_TOKEN }}
        native-image-job-reports: 'true'
        set-java-home: 'false'
    - name: Build with Maven
      if: github.ref != 'refs/heads/master'
      run: mvn clean -B verify -s ${{ github.workspace }}/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload binary
      uses: actions/upload-artifact@v2
      with:
        name: maven-settings-decoder-${{ matrix.os }}
        path: target/maven-settings-decoder*
